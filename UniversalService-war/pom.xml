<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>
	<artifactId>UniversalService-war</artifactId>

	<parent>
		<groupId>amtc.gue.ws</groupId>
		<artifactId>UniversalService</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<properties>
		<appengine.app.version>1-war</appengine.app.version>
	</properties>

	<dependencies>
		<!-- Compile/runtime dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${appengine.target.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-endpoints</artifactId>
			<version>${appengine.target.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- JPA dependencies -->
		<!-- <dependency> -->
		<!-- <groupId>com.google.appengine.orm</groupId> -->
		<!-- <artifactId>datanucleus-appengine</artifactId> -->
		<!-- <version>2.0.1.1</version> -->
		<!-- Need to exclude the enhancer since it interferes with the enhancer 
			plugin -->
		<!-- <exclusions> -->
		<!-- <exclusion> -->
		<!-- <groupId>org.datanucleus</groupId> -->
		<!-- <artifactId>datanucleus-enhancer</artifactId> -->
		<!-- </exclusion> -->
		<!-- </exclusions> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>javax.jdo</groupId> -->
		<!-- <artifactId>jdo-api</artifactId> -->
		<!-- <version>[3.0, 4.0]</version> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jpa_2.0_spec</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<scope>runtime</scope>
			<!-- version>3.2.7</version -->
			<!-- <version>3.1.5</version> -->
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-enhancer</artifactId>
			<scope>runtime</scope>
			<!-- version>3.1.0-release</version -->
			<version>3.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jpa</artifactId>
			<!-- <version>3.1.1</version> -->
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-xml</artifactId>
			<version>3.1.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.appengine.orm</groupId>
			<artifactId>datanucleus-appengine</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- SWAGGER -->
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-jersey2-jaxrs -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
			<version>1.5.10</version>
		</dependency>

		<!-- Git -->
		<!-- https://mvnrepository.com/artifact/org.eclipse.mylyn.github/org.eclipse.egit.github.core -->
		<dependency>
			<groupId>org.eclipse.mylyn.github</groupId>
			<artifactId>org.eclipse.egit.github.core</artifactId>
			<version>2.1.5</version>
		</dependency>

		<!-- JSoup -->
		<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.10.2</version>
		</dependency>

		<!-- Objectify -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>${objectify.version}</version>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${appengine.target.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${appengine.target.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.infinitest</groupId>
			<artifactId>continuous-testing-toolkit</artifactId>
			<version>1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.glassfish.jersey.test-framework.providers</groupId> -->
		<!-- <artifactId>jersey-test-framework-provider-jdk-http</artifactId> -->
		<!-- <version>2.23.2</version> -->
		<!-- </dependency> -->

		<!-- JERSEY -->
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-inmemory</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- Endpoints -->
		<dependency>
			<groupId>com.google.endpoints</groupId>
			<artifactId>endpoints-framework</artifactId>
			<version>${endpoints.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.endpoints</groupId>
			<artifactId>endpoints-management-control-appengine-all</artifactId>
			<version>${endpoints.management.version}</version>
		</dependency>

		<!-- App Stats -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${appengine.target.version}</version>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>GetSwaggerDoc</id>
			<activation>
				<property>
					<name>GetSwaggerDoc</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.4.0</version>
						<configuration>
							<includePluginDependencies>true</includePluginDependencies>
							<mainClass>com.google.api.server.spi.tools.EndpointsTool</mainClass>
							<arguments>
								<argument>get-swagger-doc</argument>
								<argument>--hostname=echo-http://${endpoints.project.id}.appspot.com/_ah/api/</argument>
								<argument>--war=target/UniversalService-war-1.0-SNAPSHOT</argument>
								<argument>amtc.gue.ws.tournament.PlayerService</argument>
							</arguments>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>com.google.endpoints</groupId>
								<artifactId>endpoints-framework-tools</artifactId>
								<version>${endpoints.framework.version}</version>
							</dependency>
							<dependency>
								<groupId>com.google.appengine</groupId>
								<artifactId>appengine-api-1.0-sdk</artifactId>
								<version>${appengine.target.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<outputDirectory>target/${project.artifactId}-${project.version}/WEB-INF/classes</outputDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<webResources>
						<!-- in order to interpolate version from pom into appengine-web.xml -->
						<resource>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<!-- Datanucleus -->
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>3.1.3</version>
				<configuration>
					<api>JPA</api>
					<fork>false</fork>
					<!-- persistenceUnitName>gae-jpa</persistenceUnitName -->
					<mappingInlcudes>**/model/*.class</mappingInlcudes>
					<mappingInlcudes>**/model/JPA/*.class</mappingInlcudes>
					<log4jConfiguration>${basedir}/src/main/resources/log4j.properties</log4jConfiguration>
					<verbose>true</verbose>
				</configuration>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- mvn site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.6</version>
				<configuration>
					<locales>en,de</locales>
				</configuration>
			</plugin>

			<!-- JaCoCo -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin> -->
			<!-- <groupId>org.jacoco</groupId> -->
			<!-- <artifactId>jacoco-maven-plugin</artifactId> -->
			<!-- <version>0.7.5.201505241946</version> -->
			<!-- <configuration> -->
			<!-- <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile> -->
			<!-- <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>jacoco-initialize</id> -->
			<!-- <goals> -->
			<!-- <goal>prepare-agent</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- <execution> -->
			<!-- <id>jacoco-site</id> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>report</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<!-- Cobertura code coverage -->
			<!-- <plugin> -->
			<!-- <groupId>org.codehaus.mojo</groupId> -->
			<!-- <artifactId>cobertura-maven-plugin</artifactId> -->
			<!-- <version>${cobertura.version}</version> -->
			<!-- <configuration> -->
			<!-- <instrumentation> -->
			<!-- <ignores> -->
			<!-- <ignore>amtc.gue.ws.books.persistence.model.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.books.delegate.persist.exception.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.books.service.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.books.service.inout.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.books.service.inout.output.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.books.service.jaxws.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.books.servlet.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.books.utils.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.*</ignore> -->
			<!-- <ignore>amtc.gue.ws.jaxws.*</ignore> -->
			<!-- </ignores> -->
			<!-- <excludes> -->
			<!-- <exclude>amtc/gue/ws/books/persistence/model/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/books/delegate/persist/exception/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/books/service/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/books/service/inout/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/books/service/inout/output/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/books/service/jaxws/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/books/servlet/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/books/utils/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/*.class</exclude> -->
			<!-- <exclude>amtc/gue/ws/jaxws/*.class</exclude> -->
			<!-- </excludes> -->
			<!-- </instrumentation> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
		</plugins>
	</build>

	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>false</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.3</version>
				<configuration>
					<effort>Max</effort>
					<!--Restrict analysis to the given comma-separated list of classes and 
						packages -->
					<!--<onlyAnalyze>com.example.*</onlyAnalyze> -->
					<plugins>
						<plugin>
							<groupId>com.h3xstream.findsecbugs</groupId>
							<artifactId>findsecbugs-plugin</artifactId>
							<version>LATEST</version>
						</plugin>
					</plugins>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.6</version>
				<configuration>
					<!--A list of files to include into checking. Can contain Ant-style 
						wildcards and double wildcards. Defaults to **/*.java. -->
					<!--<includes> <include>**/*Example.java</include> </includes> -->
					<!--A list of files to exclude from checking. Can contain Ant-style 
						wildcards and double wildcards. -->
					<!--<excludes> <exclude>**/*Example.java</exclude> </excludes> -->
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
