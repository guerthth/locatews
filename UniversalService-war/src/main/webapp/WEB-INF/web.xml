<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	version="2.5"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- REST Jersey Configuration -->
	<!-- <display-name>REST Application</display-name> -->
	<!-- <servlet> -->
	<!-- <servlet-name>Jersey REST Service</servlet-name> -->
	<!-- <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class> -->
	<!-- Register JAX-RS Application, if needed -->
	<!-- <init-param> -->
	<!-- <param-name>javax.ws.rs.Application</param-name> -->
	<!-- <param-value>amtc.gue.ws.service.RestApplication</param-value> -->
	<!-- </init-param> -->
	<!-- Register resources and providers under amtc.gue.ws.service -->
	<!-- <init-param> -->
	<!-- <param-name>jersey.config.server.provider.packages</param-name> -->
	<!-- <param-value> -->
	<!-- amtc.gue.ws -->
	<!-- </param-value> -->
	<!-- </init-param> -->
	<!-- Enable Tracing support. -->
	<!-- <init-param> -->
	<!-- <param-name>jersey.config.server.tracing</param-name> -->
	<!-- <param-value>ALL</param-value> -->
	<!-- </init-param> -->
	<!-- <init-param> -->
	<!-- <param-name>jersey.config.server.provider.classnames</param-name> -->
	<!-- <param-value> -->
	<!-- org.glassfish.jersey.server.gae.GaeFeature; -->
	<!-- </param-value> -->
	<!-- </init-param> -->
	<!-- OLD -->
	<!-- <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class> -->
	<!-- Register resources and providers under amtc.gue.ws package. -->
	<!-- <init-param> -->
	<!-- <param-name>com.sun.jersey.config.property.packages</param-name> -->
	<!-- <param-value>amtc.gue.ws.service</param-value> -->
	<!-- </init-param> -->
	<!-- <init-param> -->
	<!-- <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name> -->
	<!-- <param-value>true</param-value> -->
	<!-- </init-param> -->
	<!-- NEW -->
	<!-- <load-on-startup>1</load-on-startup> -->
	<!-- </servlet> -->

	<!-- <servlet-mapping> -->
	<!-- <servlet-name>Jersey REST Service</servlet-name> -->
	<!-- <url-pattern>/*</url-pattern> -->
	<!-- </servlet-mapping> -->

	<!-- java 8 migration: old j7 impl  -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>SystemServiceServlet</servlet-name> -->
<!-- 		<servlet-class>com.google.api.server.spi.SystemServiceServlet</servlet-class> -->
<!-- 		<init-param> -->
<!-- 			<param-name>services</param-name> -->
<!-- 			<param-value> -->
<!-- 				amtc.gue.ws.base.UserService, -->
<!-- 				amtc.gue.ws.books.BookService, -->
<!-- 				amtc.gue.ws.books.TagService, -->
<!-- 				amtc.gue.ws.tournament.PlayerService, -->
<!-- 				amtc.gue.ws.shopping.BillinggroupService -->
<!-- 			</param-value> -->
<!-- 		</init-param> -->
<!-- 	</servlet> -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>SystemServiceServlet</servlet-name> -->
<!-- 		<url-pattern>/_ah/spi/*</url-pattern> -->
<!-- 	</servlet-mapping> -->
	
	<servlet>
		<servlet-name>EndpointsServlet</servlet-name>
		<servlet-class>com.google.api.server.spi.EndpointsServlet</servlet-class>
		<init-param>
			<param-name>services</param-name>
			<param-value>
				amtc.gue.ws.base.UserService,
				amtc.gue.ws.books.BookService,
				amtc.gue.ws.books.TagService,
				amtc.gue.ws.tournament.PlayerService,
				amtc.gue.ws.shopping.BillinggroupService,
				amtc.gue.ws.shopping.ShopService
			</param-value>		
		</init-param>
		<init-param>
			<param-name>restricted</param-name>
			<param-value>false</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>EndpointsServlet</servlet-name>
		<url-pattern>/_ah/api/*</url-pattern>
	</servlet-mapping>

<!-- 	<servlet> -->
<!-- 		<servlet-name>appstats</servlet-name> -->
<!-- 		<servlet-class>com.google.appengine.tools.appstats.AppstatsServlet</servlet-class> -->
<!-- 	</servlet> -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>appstats</servlet-name> -->
<!-- 		<url-pattern>/appstats/*</url-pattern> -->
<!-- 	</servlet-mapping> -->

	<servlet>
		<servlet-name>SendNewUserEmailServlet</servlet-name>
		<servlet-class>amtc.gue.ws.base.service.rest.SendNewUserEmailServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SendNewUserEmailServlet</servlet-name>
		<url-pattern>/tasks/send_newuserinbillinggroup_email</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>SendNewBillEmailServlet</servlet-name>
		<servlet-class>amtc.gue.ws.base.service.rest.SendNewBillEmailServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SendNewBillEmailServlet</servlet-name>
		<url-pattern>/tasks/send_newbillinbillinggroup_email</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>SetBillinggroupAnnouncementServlet</servlet-name>
		<servlet-class>amtc.gue.ws.base.service.rest.SetBillinggroupAnnouncementServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SetBillinggroupAnnouncementServlet</servlet-name>
		<url-pattern>/crons/set_billinggroup_announcements</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>CreateBillinggroupReportsServlet</servlet-name>
		<servlet-class>amtc.gue.ws.base.service.rest.CreateBillinggroupReportsServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CreateBillinggroupReportsServlet</servlet-name>
		<url-pattern>/crons/create_billinggroup_reports</url-pattern>
	</servlet-mapping>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>all</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<user-data-constraint>
			<transport-guarantee>CONFIDENTIAL</transport-guarantee>
		</user-data-constraint>
	</security-constraint>
<!-- 	<security-constraint> -->
<!-- 		<web-resource-collection> -->
<!-- 			<web-resource-name>appstats</web-resource-name> -->
<!-- 			<url-pattern>/appstats/*</url-pattern> -->
<!-- 		</web-resource-collection> -->
<!-- 		<auth-constraint> -->
<!-- 			<role-name>admin</role-name> -->
<!-- 		</auth-constraint> -->
<!-- 	</security-constraint> -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>tasks</web-resource-name>
			<url-pattern>/tasks/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>crons</web-resource-name>
			<url-pattern>/crons/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>

<!-- 	<filter> -->
<!-- 		<filter-name>appstats</filter-name> -->
<!-- 		<filter-class>com.google.appengine.tools.appstats.AppstatsFilter</filter-class> -->
<!-- 		<init-param> -->
<!-- 			<param-name>logMessage</param-name> -->
<!-- 			<param-value>Appstats available: /appstats/details?time={ID}</param-value> -->
<!-- 		</init-param> -->
<!-- 		<init-param> -->
<!-- 			<param-name>calculateRpcCosts</param-name> -->
<!-- 			<param-value>true</param-value> -->
<!-- 		</init-param> -->
<!-- 	</filter> -->
<!-- 	<filter-mapping> -->
<!-- 		<filter-name>appstats</filter-name> -->
<!-- 		<url-pattern>/*</url-pattern> -->
<!-- 	</filter-mapping> -->
	<filter>
		<filter-name>ObjectifyFilter</filter-name>
		<filter-class>com.googlecode.objectify.ObjectifyFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ObjectifyFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--  Endpoints Framework -->
	<!-- Add a filter that fetches the service config from service management. -->
	<filter>
	    <filter-name>endpoints-api-configuration</filter-name>
	    <filter-class>com.google.api.control.ServiceManagementConfigFilter</filter-class>
	</filter>
	
	<!-- Add a filter that performs Endpoints logging and monitoring. -->
	<filter>
	    <filter-name>endpoints-api-controller</filter-name>
	    <filter-class>com.google.api.control.extensions.appengine.GoogleAppEngineControlFilter</filter-class>
	    <init-param>
	        <param-name>endpoints.projectId</param-name>
	        <param-value>theuniversalwebservice</param-value>
	    </init-param>
	    <init-param>
	        <param-name>endpoints.serviceName</param-name>
	        <param-value>theuniversalwebservice.appspot.com</param-value>
	    </init-param>
	</filter>
	
	<filter-mapping>
	    <filter-name>endpoints-api-configuration</filter-name>
	    <servlet-name>EndpointsServlet</servlet-name>
	</filter-mapping>
	
	<filter-mapping>
	    <filter-name>endpoints-api-controller</filter-name>
	    <servlet-name>EndpointsServlet</servlet-name>
	</filter-mapping>

	<!-- <filter> -->
	<!-- <filter-name>CORS</filter-name> -->
	<!-- <filter-class>amtc.gue.ws.base.service.rest.CORSFilter</filter-class> -->
	<!-- </filter> -->
	<!-- <filter-mapping> -->
	<!-- <filter-name>CORS</filter-name> -->
	<!-- <url-pattern>/*</url-pattern> -->
	<!-- </filter-mapping> -->

	<!-- SOAP Configuration using HelloWorldServlet -->
	<!-- <servlet> -->
	<!-- <servlet-name>HelloWorldServlet</servlet-name> -->
	<!-- <servlet-class>amtc.gue.ws.HelloWorldServlet</servlet-class> -->
	<!-- </servlet> -->
	<!-- <servlet> -->
	<!-- <servlet-name>BookCalcServlet</servlet-name> -->
	<!-- <servlet-class>amtc.gue.ws.service.soap.BookCalcServlet</servlet-class> -->
	<!-- </servlet> -->

	<!-- Mapping for the actual BookCalcWSDL -->
	<!-- <servlet-mapping> -->
	<!-- <servlet-name>BookCalcServlet</servlet-name> -->
	<!-- <url-pattern>/BookServiceService</url-pattern> -->
	<!-- </servlet-mapping> -->
</web-app>